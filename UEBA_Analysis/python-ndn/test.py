import ctypes
from socket import *
import pytest
import struct
from ndn.encoding import Name, Component
import ndn

def test_decode_func(data):
	#print(len(data))
	data = bytearray(data.encode('raw_unicode_escape'))
	if data[0] == 6:
		try:
			decode_data = ndn.encoding.ndn_format_0_3.parse_data((data), with_tl = True)[3]   #data_packet
			print(decode_data.signature_info, '\n', decode_data.signature_info.key_locator)
			return decode_data.signature_info.key_locator
		except Exception as e:
			print('data packet parse error:', e)
	elif data[0] == 5:
		try:
			decode_data = ndn.encoding.ndn_format_0_3.parse_interest((data), with_tl = True)
			print(decode_data, '\n', bytes(decode_data[0][-2]))
			return bytes(decode_data[0][-2])
		except Exception as e:
			print('interest packet parse error:',e)
	else:
		print("not match pattern")

if __name__ == "__main__":

	string = u'\x05\xfd\x01r\x07\xfd\x01Q\x08\x03min\x08\r1602578424134\x08\x08d2doNQ--\x08\x012\x08&\x16$\x1b\x01\x01\x1c\x1f\x07\x1d\x08\x03key\x08\x07gdcni10\x08\x03KEY\x08\x08p\xe8\tO\x07o\xc5\x19\x08\xfd\x01\x04\x17\xfd\x01\x00\xa9\x8d\x03xb\x9f\x0c\xc7\t\xfa:\xd7G\x8axq*`3\xdc,\xcb\xb3\x9dCkv\xf4\xc4\xfb\x94\xbc4\xfcR\x0b(\xde\x9c\xd0\x0fV\x12\xdb\x14\x148w\x97\xabC\x04==\xa1\xa9\x93ibR[p=\x0e`\xb9\xf9;g\x9a\xe2\xbf\x93\xa4\x9foI\xb6\xef\xbf\xaa\xda\x11~ \x13)\xc1%U\xe17W\x02\xc3\xc3O\x0f\x03\xdb\xde\xea\xf9A\x83\xcf\x9d\xd3\xcb\xe0\x91\x10\xa5\x0eL.?Fd\xacn*)\xf8\xf6\xa9\xf0\x03\x1a\xa5\x1c\x82\xe7_@\x07\xfb\x1b\xd1m\xd2\xd4v\x08\x9f\xabak\xf6{\xbd<\x1fs\xd7t\xd8\xe5\xd8[/\xe9v\xe9\xe4\xf7\x90\x05 \xdck?\x8e\xadkJ0\x89\xc8\xaeU6 \xfa\xb9\x18%=\xabKjx\x134Z\xbb\x8b\xe1{\x97y\x7f{"U\x90\xf9\x86a\xcb<\xf4\x7f-\xf3WV]3\x92\x037\x06E\xe0\x88\x83\xa8\xfb/\xc51TK\x94\xd4\xa0T\xad\x03\x86\xb8\xd0\xda\xdd\x98r\xccO\xde\x17(R\x9f\xaa<!\x00\n\x04\xdc\xcdf\xbf$\x13\x01\x00\x00\x00\x02\x05\x00\x00\x00\t\x00\x00\x00\x05\x08\xff\xff\xff\xff'
	test_decode_func(string)
